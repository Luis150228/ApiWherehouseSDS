// ...después de:
const data = new google.visualization.DataTable(tableJson);

// Mapea folio -> origen_analist (primera ocurrencia no vacía)
const origenByFolio = new Map();
for (const r of rows) {
  const folio  = String(r.incidencia_principal || '').trim();
  const origen = String(r.origen_analist ?? r.origen ?? '').trim();
  if (folio && origen && !origenByFolio.has(folio)) {
    origenByFolio.set(folio, origen);
  }
}

// Pone 'f' (formatted label) solo en el nivel de folio (parent === 'Tickets')
for (let i = 0; i < data.getNumberOfRows(); i++) {
  const idPath = data.getValue(i, 0);
  const parent = data.getValue(i, 1);
  if (parent === 'Tickets') { // este row es un folio
    const folio = (String(idPath).split('│')[1] || '').trim();
    const origen = origenByFolio.get(folio);
    // No tocar el 'v' (idPath); solo el 'f' que se renderiza visualmente
    data.setFormattedValue(i, 0, origen ? `${folio} – ${origen}` : folio);
  }
}
