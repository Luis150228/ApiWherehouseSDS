const actionsGenerics = (() => {
  let bound = false; // evita múltiples bindings

  return function init() {
    if (bound) return;
    bound = true;

    const list = document.getElementById('list-active-generic');
    if (!list) return;

    list.addEventListener('click', async (e) => {
      // botón real aunque hagas click en un <span> o ícono dentro
      const btn = e.target.closest('button[data-type-generic="true"]');
      if (!btn || !list.contains(btn)) return;

      // Evita doble click mientras procesa
      if (btn.dataset.busy === '1') return;

      // Arma payload desde data-*
      const dataSend = {
        order: btn.dataset.order,
        generic: btn.dataset.generic,
      };

      // Estado “busy”
      btn.dataset.busy = '1';
      btn.disabled = true;
      const prevHTML = btn.innerHTML;
      btn.innerHTML = `<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Procesando…`;

      try {
        const sendAction = await fetchPOST('genericos', dataSend);
        if (sendAction.code === "200") {
          // Redibuja la lista con datos frescos
          liActiveGeneric(sendAction.data, 'list-active-generic');
          // OJO: no necesitas re-registrar nada; el listener sigue vivo en el contenedor
        } else {
          console.warn('Respuesta no exitosa:', sendAction);
        }
      } catch (err) {
        console.error(err);
      } finally {
        // Si aún existe el botón (puede haber desaparecido tras redibujar)
        if (document.body.contains(btn)) {
          btn.innerHTML = prevHTML;
          btn.disabled = false;
          btn.dataset.busy = '0';
        }
      }
    });
  };
})();
