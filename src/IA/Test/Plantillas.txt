/****SQL*****/
CREATE TABLE `eut_cmdb_bridge` (
  `asset_tag` VARCHAR(50) NOT NULL,
  `u_type_ref` VARCHAR(50),
  `name` VARCHAR(255),
  `assigned_to` VARCHAR(255),
  `serial_number` VARCHAR(100),
  `u_status` VARCHAR(100),
  `u_status_reason` VARCHAR(255),
  `assignment_group` VARCHAR(255),
  `manufacturer` VARCHAR(100),
  `model_id` VARCHAR(255),
  `u_third_company` VARCHAR(255),
  `dns_domain` VARCHAR(255),
  `u_delivery` VARCHAR(255),
  `used_for` VARCHAR(100),
  `u_obsolescence_date_hw` DATE,
  `u_obsolescence_date_sw` DATE,
  `u_os_model_id` VARCHAR(255),
  `sys_class_name` VARCHAR(100),
  `sys_created_by` VARCHAR(255),
  `company` VARCHAR(255),
  `comments` LONGTEXT,
  `u_category` VARCHAR(100),
  `managed_by` VARCHAR(255),
  `support_group` VARCHAR(255),
  `owned_by` VARCHAR(255),
  `location` VARCHAR(255),
  `u_created_date` DATETIME,
  `sys_updated_on` DATETIME,
  `sys_updated_by` VARCHAR(255),
  `mac_address` VARCHAR(100),
  `ip_address` VARCHAR(100),
  `u_adm_ip_address` VARCHAR(100),
  `fqdn` VARCHAR(255),
  `f_alta` TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE `eut_cmdb` LIKE `eut_cmdb_bridge`;


DELIMITER $$
CREATE DEFINER=`lrangel`@`%` PROCEDURE `stp_addCMDB`(
    IN var_asset_tag VARCHAR(50),
    IN var_u_type_ref VARCHAR(50),
    IN var_name VARCHAR(255),
    IN var_assigned_to VARCHAR(255),
    IN var_serial_number VARCHAR(100),
    IN var_u_status VARCHAR(100),
    IN var_u_status_reason VARCHAR(255),
    IN var_assignment_group VARCHAR(255),
    IN var_manufacturer VARCHAR(100),
    IN var_model_id VARCHAR(255),
    IN var_u_third_company VARCHAR(255),
    IN var_dns_domain VARCHAR(255),
    IN var_u_delivery VARCHAR(255),
    IN var_used_for VARCHAR(100),
    IN var_u_obsolescence_date_hw DATE,
    IN var_u_obsolescence_date_sw DATE,
    IN var_u_os_model_id VARCHAR(255),
    IN var_sys_class_name VARCHAR(100),
    IN var_sys_created_by VARCHAR(255),
    IN var_company VARCHAR(255),
    IN var_comments LONGTEXT,
    IN var_u_category VARCHAR(100),
    IN var_managed_by VARCHAR(255),
    IN var_support_group VARCHAR(255),
    IN var_owned_by VARCHAR(255),
    IN var_location VARCHAR(255),
    IN var_u_created_date DATETIME,
    IN var_sys_updated_on DATETIME,
    IN var_sys_updated_by VARCHAR(255),
    IN var_mac_address VARCHAR(100),
    IN var_ip_address VARCHAR(100),
    IN var_u_adm_ip_address VARCHAR(100),
    IN var_fqdn VARCHAR(255)
)
BEGIN
    INSERT INTO `eut_cmdb_bridge` (
        asset_tag, u_type_ref, name, assigned_to, serial_number,
        u_status, u_status_reason, assignment_group, manufacturer, model_id,
        u_third_company, dns_domain, u_delivery, used_for,
        u_obsolescence_date_hw, u_obsolescence_date_sw, u_os_model_id,
        sys_class_name, sys_created_by, company, comments, u_category,
        managed_by, support_group, owned_by, location, u_created_date,
        sys_updated_on, sys_updated_by, mac_address, ip_address,
        u_adm_ip_address, fqdn
    )
    VALUES (
        var_asset_tag, var_u_type_ref, var_name, var_assigned_to, var_serial_number,
        var_u_status, var_u_status_reason, var_assignment_group, var_manufacturer, var_model_id,
        var_u_third_company, var_dns_domain, var_u_delivery, var_used_for,
        var_u_obsolescence_date_hw, var_u_obsolescence_date_sw, var_u_os_model_id,
        var_sys_class_name, var_sys_created_by, var_company, var_comments, var_u_category,
        var_managed_by, var_support_group, var_owned_by, var_location, var_u_created_date,
        var_sys_updated_on, var_sys_updated_by, var_mac_address, var_ip_address,
        var_u_adm_ip_address, var_fqdn
    );

    SELECT COUNT(*) AS total, MAX(`f_alta`) AS actualizado, 'cmdb' AS type FROM `eut_cmdb_bridge`;
END$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`lrangel`@`%` PROCEDURE `stp_addCMDBBridge`()
BEGIN
    -- Transferir datos del puente a la tabla histórica
    INSERT INTO `eut_cmdb`
    SELECT * FROM `eut_cmdb_bridge`
    ON DUPLICATE KEY UPDATE
        u_status = VALUES(u_status),
        u_status_reason = VALUES(u_status_reason),
        assignment_group = VALUES(assignment_group),
        sys_updated_on = VALUES(sys_updated_on),
        sys_updated_by = VALUES(sys_updated_by),
        comments = VALUES(comments);

    -- Limpiar tabla puente
    TRUNCATE `eut_cmdb_bridge`;

    -- Retornar resumen
    SELECT COUNT(*) AS total, NOW() AS actualizado, 'cmdb' AS type;
END$$
DELIMITER ;


/******  PHP   ******/

public function readDataCMDB($datos, $dateOrder)
{
    $json = json_decode($datos, true);

    // Validar que tenga el campo clave del layout (asset_tag)
    if (!isset($json[0]['asset_tag'])) {
        return [
            "code" => "204",
            "mnj" => "Error: el archivo no contiene datos válidos de CMDB",
            "data" => ''
        ];
    }

    foreach ($json as $value) {
        $asset_tag              = $value['asset_tag'] ?? '';
        $u_type_ref             = $value['u_type_ref'] ?? '';
        $name                   = $value['name'] ?? '';
        $assigned_to            = $value['assigned_to'] ?? '';
        $serial_number          = $value['serial_number'] ?? '';
        $u_status               = $value['u_status'] ?? '';
        $u_status_reason        = $value['u_status_reason'] ?? '';
        $assignment_group       = $value['assignment_group'] ?? '';
        $manufacturer           = $value['manufacturer'] ?? '';
        $model_id               = $value['model_id'] ?? '';
        $u_third_company        = $value['u_third_company'] ?? '';
        $dns_domain             = $value['dns_domain'] ?? '';
        $u_delivery             = $value['u_delivery'] ?? '';
        $used_for               = $value['used_for'] ?? '';
        $u_obsolescence_date_hw = $value['u_obsolescence_date_hw'] ?? null;
        $u_obsolescence_date_sw = $value['u_obsolescence_date_sw'] ?? null;
        $u_os_model_id          = $value['u_os_model_id'] ?? '';
        $sys_class_name         = $value['sys_class_name'] ?? '';
        $sys_created_by         = $value['sys_created_by'] ?? '';
        $company                = $value['company'] ?? '';
        $comments               = $value['comments'] ?? '';
        $u_category             = $value['u_category'] ?? '';
        $managed_by             = $value['managed_by'] ?? '';
        $support_group          = $value['support_group'] ?? '';
        $owned_by               = $value['owned_by'] ?? '';
        $location               = $value['location'] ?? '';
        $u_created_date         = $value['u_created_date'] ?? null;
        $sys_updated_on         = $value['sys_updated_on'] ?? null;
        $sys_updated_by         = $value['sys_updated_by'] ?? '';
        $mac_address            = $value['mac_address'] ?? '';
        $ip_address             = $value['ip_address'] ?? '';
        $u_adm_ip_address       = $value['u_adm_ip_address'] ?? '';
        $fqdn                    = $value['fqdn'] ?? '';

        // Llamar al procedimiento para insertar en tabla puente
        $this->uploadCMDBData(
            $asset_tag, $u_type_ref, $name, $assigned_to, $serial_number,
            $u_status, $u_status_reason, $assignment_group, $manufacturer, $model_id,
            $u_third_company, $dns_domain, $u_delivery, $used_for,
            $u_obsolescence_date_hw, $u_obsolescence_date_sw, $u_os_model_id,
            $sys_class_name, $sys_created_by, $company, $comments, $u_category,
            $managed_by, $support_group, $owned_by, $location, $u_created_date,
            $sys_updated_on, $sys_updated_by, $mac_address, $ip_address,
            $u_adm_ip_address, $fqdn
        );
    }

    return [
        "code" => "200",
        "mnj" => "Datos CMDB procesados",
        "data" => count($json) . " registros insertados en puente"
    ];
}



private function uploadCMDBData($asset_tag, $u_type_ref, $name, $assigned_to, $serial_number, $u_status,
    $u_status_reason, $assignment_group, $manufacturer, $model_id, $u_third_company, $dns_domain, $u_delivery,
    $used_for, $u_obsolescence_date_hw, $u_obsolescence_date_sw, $u_os_model_id, $sys_class_name, $sys_created_by,
    $company, $comments, $u_category, $managed_by, $support_group, $owned_by, $location, $u_created_date,
    $sys_updated_on, $sys_updated_by, $mac_address, $ip_address, $u_adm_ip_address, $fqdn)
{
    $sql = "CALL stp_addCMDB('$asset_tag','$u_type_ref','$name','$assigned_to','$serial_number',
            '$u_status','$u_status_reason','$assignment_group','$manufacturer','$model_id',
            '$u_third_company','$dns_domain','$u_delivery','$used_for',
            '$u_obsolescence_date_hw','$u_obsolescence_date_sw','$u_os_model_id',
            '$sys_class_name','$sys_created_by','$company','$comments','$u_category',
            '$managed_by','$support_group','$owned_by','$location','$u_created_date',
            '$sys_updated_on','$sys_updated_by','$mac_address','$ip_address','$u_adm_ip_address','$fqdn')";
    $query = parent::getData($sql);

    return [
        "code" => "200",
        "mnj" => "Datos Procesados",
        "data" => $query
    ];
}
