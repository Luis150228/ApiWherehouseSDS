DELIMITER $$

CREATE DEFINER=`lrangel`@`%` PROCEDURE `stp_generic_tickets_QualityScore`()
BEGIN
  WITH
  base AS (
    SELECT
      r.abierto_por,
      r.folio,
      IF(r.incidencia_principal <> '', r.incidencia_principal, r.folio) AS incidencia_principal,
      r.abierto,

      /* Tomado solo de la plantilla (concat de ambos campos como ya lo usas) */
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'EXPEDIENTE')        AS expediente,
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'REGION')            AS region,
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'CORREO')            AS mail,
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'CC')                AS CC,
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'CEL_CONTACTO')      AS cel_contacto,
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'IP')                AS IP,
      UPPER(fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'HOSTNAME'))   AS hostname,
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'UPN')               AS UPN,
      fn_parseItemGeneric(CONCAT(r.descripcion, '\n', r.obs_notasresolucion), 'NUMERO_AFECTADOS')  AS numero_afectados
    FROM servicenow_reportes r
    WHERE (r.incidencia_principal <> '' OR r.incidencia_secundarias >= 1)
      AND r.origen = 'SNGlobal Incidentes'
      AND r.abierto >= '2025-07-01 00:00:00'  -- si quieres últimos 30 días:  NOW() - INTERVAL 30 DAY
      AND (r.descripcion LIKE '%**Gener%' OR r.obs_notasresolucion LIKE '%**Gener%')
  ),
  norm AS (
    SELECT
      b.*,
      NULLIF(NULLIF(TRIM(b.expediente),''),'SIN DATOS')      AS expediente_n,
      NULLIF(NULLIF(TRIM(b.region),''),'SIN DATOS')          AS region_n,
      NULLIF(NULLIF(TRIM(b.mail),''),'SIN DATOS')            AS mail_n,
      NULLIF(NULLIF(TRIM(b.CC),''),'SIN DATOS')              AS CC_n,
      NULLIF(NULLIF(TRIM(b.cel_contacto),''),'SIN DATOS')    AS cel_n,
      NULLIF(NULLIF(TRIM(b.IP),''),'SIN DATOS')              AS IP_n,
      NULLIF(NULLIF(TRIM(b.hostname),''),'SIN DATOS')        AS host_n,
      NULLIF(NULLIF(TRIM(b.UPN),''),'SIN DATOS')             AS UPN_n,
      NULLIF(NULLIF(TRIM(b.numero_afectados),''),'SIN DATOS')AS numaf_n
    FROM base b
  ),
  flags AS (
    SELECT
      n.*,

      /* Presencia / formato */
      IF(n.expediente_n IS NOT NULL, 1, 0)                                                       AS f_exp,
      IF(n.expediente_n REGEXP '^[CSZ][0-9]{6}$', 1, 0)                                          AS f_exp_fmt,
      IF(n.region_n IS NOT NULL, 1, 0)                                                           AS f_reg,
      IF(n.region_n IS NOT NULL AND CHAR_LENGTH(n.region_n) <= 11, 1, 0)                         AS f_reg_len,
      IF(n.mail_n IS NOT NULL AND n.mail_n REGEXP '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$', 1, 0) AS f_mail_fmt,
      IF(n.CC_n IS NOT NULL AND n.CC_n REGEXP '^[0-9]{3,5}$', 1, 0)                              AS f_cc_fmt,
      IF(n.cel_n IS NOT NULL AND REPLACE(n.cel_n,' ','') REGEXP '^[0-9]{10}$', 1, 0)             AS f_cel_fmt,
      IF(n.IP_n IS NOT NULL AND n.IP_n REGEXP '^((25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1?[0-9]?[0-9])$', 1, 0) AS f_ip_fmt,
      IF(n.host_n IS NOT NULL AND n.host_n REGEXP '^[A-Za-z0-9][A-Za-z0-9-]{0,62}(\\.[A-Za-z0-9-]{1,63})*$', 1, 0) AS f_host_fmt,
      IF(n.UPN_n IS NOT NULL AND n.mail_n IS NOT NULL AND n.UPN_n LIKE CONCAT('%', SUBSTRING_INDEX(n.mail_n,'@',-1)), 1, 0) AS f_upn_dom,
      IF(n.numaf_n IS NULL OR n.numaf_n='SIN DATOS' OR n.numaf_n REGEXP '^[0-9]+(-[0-9]+)?$', 1, 0) AS f_numaf_fmt
    FROM norm n
  )
  SELECT
    f.abierto_por,
    f.folio,
    f.incidencia_principal,
    f.abierto,
    (
      f.f_exp + f.f_exp_fmt + f.f_reg + f.f_reg_len +
      f.f_mail_fmt + f.f_cc_fmt + f.f_cel_fmt +
      f.f_ip_fmt + f.f_host_fmt + f.f_upn_dom + f.f_numaf_fmt
    ) AS score
  FROM flags f
  ORDER BY score DESC, f.abierto DESC;
END$$

DELIMITER ;
