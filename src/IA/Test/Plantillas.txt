CREATE DEFINER=`lrangel`@`%` PROCEDURE `stp_generic_tickets_all`()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE v_folio VARCHAR(20);
    DECLARE v_texto LONGTEXT;
    DECLARE v_bloque LONGTEXT;
    DECLARE v_incidencia_principal VARCHAR(45);
    DECLARE v_incidencia_secundarias INT;
    DECLARE v_incidencia_padre VARCHAR(20);
    DECLARE v_abierto_por VARCHAR(150);
    DECLARE v_nombreproyecto tinytext;
    DECLARE v_origen VARCHAR(150);

    -- Crear tabla temporal
    DROP TEMPORARY TABLE IF EXISTS tmp_tabla_plantillas;
    CREATE TEMPORARY TABLE tmp_tabla_plantillas (
        folio VARCHAR(20),
        incidencia_padre VARCHAR(20),
        expediente VARCHAR(30),
        abierto_por VARCHAR(150),
        nombreproyecto tinytext,
        ext_contacto VARCHAR(100),
        cel_contacto VARCHAR(100),
        nombre2_contacto VARCHAR(200),
        cel2_contacto VARCHAR(100),
        mail VARCHAR(200),
        puesto VARCHAR(200),
        CC VARCHAR(50),
        region VARCHAR(100),
        UPN VARCHAR(150),
        usuario_n VARCHAR(100),
        IP VARCHAR(100),
        hostname VARCHAR(150),
        tipo_usuario VARCHAR(100),
        descripcion_incidente VARCHAR(500),
        numero_afectados VARCHAR(50),
        carrier VARCHAR(100),
        IP_carrier VARCHAR(100),
        origen VARCHAR(150)
    );

    /* =============================
       1) Insertar casos SIN plantilla
       ============================= */
    INSERT INTO tmp_tabla_plantillas (
        folio, incidencia_padre, expediente, abierto_por, nombreproyecto,
        ext_contacto, cel_contacto, nombre2_contacto, cel2_contacto, mail,
        puesto, CC, region, UPN, usuario_n, IP, hostname, tipo_usuario,
        descripcion_incidente, numero_afectados, carrier, IP_carrier, origen
    )
    SELECT 
        r.folio,
        IF(r.incidencia_secundarias >= 1, r.folio, r.incidencia_principal),
        IFNULL(w.usuario, 'SIN DATOS'),
        r.abierto_por,
        r.nombreproyecto,
        'SIN DATOS',
        IFNULL(l.num_movil, 'SIN DATOS'),
        w.supervisor,
        'SIN DATOS',
        w.mail,
        w.puesto,
        RIGHT(w.cc_wd, 4),
        REGEXP_REPLACE(w.region, '^Region[[:space:]]+', ''),
        w.upn_wd,
        w.n_user,
        IFNULL(c.ip_address, 'SIN DATOS'),
        IFNULL(c.name, 'SIN DATOS'),
        r.suc_corp,
        'SIN DATOS',
        'SIN DATOS',
        'SIN DATOS',
        'SIN DATOS',
        r.origen
    FROM eut_reportesbk.servicenow_reportes r
    LEFT JOIN eut_toolmovil.eut_workday w 
        ON r.abierto_por = w.nombre_full
    LEFT JOIN eut_toolmovil.inventario_lineas l 
        ON w.usuario = l.expediente
    LEFT JOIN (
        SELECT cm1.*
        FROM eut_reportesbk.eut_cmdb cm1
        INNER JOIN (
            SELECT expediente, MAX(u_created_date) AS max_date
            FROM eut_reportesbk.eut_cmdb
            GROUP BY expediente
        ) cm2 ON cm1.expediente = cm2.expediente 
             AND cm1.u_created_date = cm2.max_date
    ) c ON w.usuario = c.expediente
    WHERE (r.incidencia_principal != '' OR r.incidencia_secundarias >= 1)
      AND r.origen = 'SNGlobal Incidentes'
      AND r.abierto >= '2025-07-01 00:00:00'
      AND (
          (r.descripcion NOT LIKE '%/**Generic BEGIN**/%') 
          AND (r.obs_notasresolucion NOT LIKE '%/**Generic BEGIN**/%')
      );

    /* =============================
       2) Procesar casos CON plantilla
       ============================= */
    DECLARE cur CURSOR FOR
        SELECT r.folio,
               r.incidencia_principal,
               r.incidencia_secundarias,
               r.abierto_por,
               r.nombreproyecto,
               r.origen,
               CASE
                   WHEN r.descripcion LIKE '%/**Generic BEGIN**/%' THEN r.descripcion
                   WHEN r.obs_notasresolucion LIKE '%/**Generic BEGIN**/%' THEN r.obs_notasresolucion
                   ELSE NULL
               END AS texto
        FROM eut_reportesbk.servicenow_reportes r
        WHERE (r.incidencia_principal != '' OR r.incidencia_secundarias >= 1)
          AND r.origen = 'SNGlobal Incidentes'
          AND r.abierto >= '2025-07-01 00:00:00'
          AND (
              (r.descripcion LIKE '%/**Generic BEGIN**/%') 
              OR (r.obs_notasresolucion LIKE '%/**Generic BEGIN**/%')
          );

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO v_folio, v_incidencia_principal, v_incidencia_secundarias,
                       v_abierto_por, v_nombreproyecto, v_origen, v_texto;
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Determinar incidencia_padre
        IF v_incidencia_secundarias >= 1 THEN
            SET v_incidencia_padre = v_folio;
        ELSEIF v_incidencia_principal IS NOT NULL AND v_incidencia_principal != '' THEN
            SET v_incidencia_padre = v_incidencia_principal;
        ELSE
            SET v_incidencia_padre = 'SIN DATOS';
        END IF;

        -- Extraer bloque entre BEGIN y END
        IF v_texto IS NOT NULL THEN
            SET v_bloque = REGEXP_SUBSTR(v_texto, '/\\*\\*Generic BEGIN\\*\\*/([\\s\\S]*?)/\\*\\*Generic END\\*\\*/');
            SET v_bloque = REPLACE(v_bloque, '/**Generic BEGIN**/', '');
            SET v_bloque = REPLACE(v_bloque, '/**Generic END**/', '');
            SET v_bloque = REGEXP_REPLACE(v_bloque, '[[:space:]]+', ' ');

            -- Extracci√≥n de campos
            SET @Expediente = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&EXPEDIENTE:[^&\n]+'), '&EXPEDIENTE:', ''))),''),'SIN DATOS');
            SET @ext_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&EXT_CONTACTO:[^&\n]+'), '&EXT_CONTACTO:', ''))),''),'SIN DATOS');
            SET @cel_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CEL_CONTACTO:[^&\n]+'), '&CEL_CONTACTO:', ''))),''),'SIN DATOS');
            SET @nombre2_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&NOMBRE2_CONTACTO:[^&\n]+'), '&NOMBRE2_CONTACTO:', ''))),''),'SIN DATOS');
            SET @cel2_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CEL2_CONTACTO:[^&\n]+'), '&CEL2_CONTACTO:', ''))),''),'SIN DATOS');
            SET @Correo = IFNULL(NULLIF(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CORREO:[^&\n]+'), '&CORREO:', '')),''),'SIN DATOS');
            SET @Puesto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&PUESTO:[^&\n]+'), '&PUESTO:', ''))),''),'SIN DATOS');
            SET @CC = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CC:[^&\n]+'), '&CC:', ''))),''),'SIN DATOS');
            SET @Region = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&REGION:[^&\n]+'), '&REGION:', ''))),''),'SIN DATOS');
            SET @UPN = IFNULL(NULLIF(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&UPN:[^&\n]+'), '&UPN:', '')),''),'SIN DATOS');
            SET @usuario_N = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&USUARIO_N:[^&\n]+'), '&USUARIO_N:', ''))),''),'SIN DATOS');
            SET @IP = IFNULL(NULLIF(REPLACE(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&IP:[^&\n]+'), '&IP:', ''))),' ',''),''),'SIN DATOS');
            SET @Hostname = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&HOSTNAME:[^&\n]+'), '&HOSTNAME:', ''))),''),'SIN DATOS');
            SET @Tipo_usuario = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&TIPO_USUARIO:[^&\n]+'), '&TIPO_USUARIO:', ''))),''),'SIN DATOS');
            SET @Descripcion_incidente = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&DESCRIPCION_INCIDENTE:[^&\n]+'), '&DESCRIPCION_INCIDENTE:', ''))),''),'SIN DATOS');
            SET @Numero_afectados = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&NUMERO_AFECTADOS:[^&\n]+'), '&NUMERO_AFECTADOS:', ''))),''),'SIN DATOS');
            SET @Carrier = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CARRIER:[^&\n]+'), '&CARRIER:', ''))),''),'SIN DATOS');
            SET @IP_Carrier = IFNULL(NULLIF(REPLACE(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&IP DEL CARRIER:[^&\n]+'), '&IP DEL CARRIER:', ''))),' ',''),''),'SIN DATOS');

            -- Insertar fila parseada
            INSERT INTO tmp_tabla_plantillas
            VALUES (
                v_folio, v_incidencia_padre,
                @Expediente, v_abierto_por, v_nombreproyecto, @ext_contacto, @cel_contacto, @nombre2_contacto, @cel2_contacto,
                @Correo, @Puesto, @CC, @Region, @UPN, @usuario_N,
                @IP, @Hostname, @Tipo_usuario, @Descripcion_incidente, @Numero_afectados,
                @Carrier, @IP_Carrier, v_origen
            );
        END IF;
    END LOOP;

    CLOSE cur;

    /* =============================
       3) Retornar resultados
       ============================= */
    SELECT * FROM tmp_tabla_plantillas;
END



CREATE DEFINER=`lrangel`@`%` PROCEDURE `stp_generic_ticket_family`(IN p_folio VARCHAR(20))
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE v_folio VARCHAR(20);
    DECLARE v_texto LONGTEXT;
    DECLARE v_bloque LONGTEXT;
    DECLARE v_incidencia_principal VARCHAR(45);
    DECLARE v_incidencia_secundarias INT;
    DECLARE v_incidencia_padre VARCHAR(20);
    DECLARE v_abierto_por VARCHAR(150);
    DECLARE v_nombreproyecto tinytext;
    DECLARE v_origen VARCHAR(150);

    /* ------------------------------------
       1) Determinar el folio padre
       ------------------------------------ */
    SET @folio_padre = (
        SELECT CASE
                 WHEN incidencia_principal != '' THEN incidencia_principal
                 ELSE folio
               END
        FROM eut_reportesbk.servicenow_reportes
        WHERE folio = p_folio
        LIMIT 1
    );

    /* Si no existe el folio, salir */
    IF @folio_padre IS NULL THEN
        SELECT 'Folio no encontrado' AS mensaje;
        LEAVE proc_end;
    END IF;

    /* ------------------------------------
       2) Crear tabla temporal de resultados
       ------------------------------------ */
    DROP TEMPORARY TABLE IF EXISTS tmp_tabla_plantillas;
    CREATE TEMPORARY TABLE tmp_tabla_plantillas (
        folio VARCHAR(20),
        incidencia_padre VARCHAR(20),
        expediente VARCHAR(30),
        abierto_por VARCHAR(150),
        nombreproyecto tinytext,
        ext_contacto VARCHAR(100),
        cel_contacto VARCHAR(100),
        nombre2_contacto VARCHAR(200),
        cel2_contacto VARCHAR(100),
        mail VARCHAR(200),
        puesto VARCHAR(200),
        CC VARCHAR(50),
        region VARCHAR(100),
        UPN VARCHAR(150),
        usuario_n VARCHAR(100),
        IP VARCHAR(100),
        hostname VARCHAR(150),
        tipo_usuario VARCHAR(100),
        descripcion_incidente VARCHAR(500),
        numero_afectados VARCHAR(50),
        carrier VARCHAR(100),
        IP_carrier VARCHAR(100),
        origen VARCHAR(150)
    );

    /* ------------------------------------
       3) Insertar casos SIN plantilla (masivo)
       ------------------------------------ */
    INSERT INTO tmp_tabla_plantillas
    SELECT 
        r.folio,
        IF(r.incidencia_secundarias >= 1, r.folio, r.incidencia_principal),
        IFNULL(w.usuario, 'SIN DATOS'),
        r.abierto_por,
        r.nombreproyecto,
        'SIN DATOS',
        IFNULL(l.num_movil, 'SIN DATOS'),
        w.supervisor,
        'SIN DATOS',
        w.mail,
        w.puesto,
        RIGHT(w.cc_wd, 4),
        REGEXP_REPLACE(w.region, '^Region[[:space:]]+', ''),
        w.upn_wd,
        w.n_user,
        IFNULL(c.ip_address, 'SIN DATOS'),
        IFNULL(c.name, 'SIN DATOS'),
        r.suc_corp,
        'SIN DATOS',
        'SIN DATOS',
        'SIN DATOS',
        'SIN DATOS',
        r.origen
    FROM eut_reportesbk.servicenow_reportes r
    LEFT JOIN eut_toolmovil.eut_workday w 
        ON r.abierto_por = w.nombre_full
    LEFT JOIN eut_toolmovil.inventario_lineas l 
        ON w.usuario = l.expediente
    LEFT JOIN (
        SELECT cm1.*
        FROM eut_reportesbk.eut_cmdb cm1
        INNER JOIN (
            SELECT expediente, MAX(u_created_date) AS max_date
            FROM eut_reportesbk.eut_cmdb
            GROUP BY expediente
        ) cm2 ON cm1.expediente = cm2.expediente 
             AND cm1.u_created_date = cm2.max_date
    ) c ON w.usuario = c.expediente
    WHERE (r.incidencia_principal = @folio_padre OR r.folio = @folio_padre)
      AND (
          (r.descripcion NOT LIKE '%/**Generic BEGIN**/%') 
          AND (r.obs_notasresolucion NOT LIKE '%/**Generic BEGIN**/%')
      );

    /* ------------------------------------
       4) Procesar casos CON plantilla (cursor)
       ------------------------------------ */
    DECLARE cur CURSOR FOR
        SELECT r.folio,
               r.incidencia_principal,
               r.incidencia_secundarias,
               r.abierto_por,
               r.nombreproyecto,
               r.origen,
               CASE
                   WHEN r.descripcion LIKE '%/**Generic BEGIN**/%' THEN r.descripcion
                   WHEN r.obs_notasresolucion LIKE '%/**Generic BEGIN**/%' THEN r.obs_notasresolucion
                   ELSE NULL
               END AS texto
        FROM eut_reportesbk.servicenow_reportes r
        WHERE (r.incidencia_principal = @folio_padre OR r.folio = @folio_padre)
          AND (
              (r.descripcion LIKE '%/**Generic BEGIN**/%') 
              OR (r.obs_notasresolucion LIKE '%/**Generic BEGIN**/%')
          );

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO v_folio, v_incidencia_principal, v_incidencia_secundarias,
                       v_abierto_por, v_nombreproyecto, v_origen, v_texto;
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Determinar incidencia_padre
        IF v_incidencia_secundarias >= 1 THEN
            SET v_incidencia_padre = v_folio;
        ELSEIF v_incidencia_principal IS NOT NULL AND v_incidencia_principal != '' THEN
            SET v_incidencia_padre = v_incidencia_principal;
        ELSE
            SET v_incidencia_padre = 'SIN DATOS';
        END IF;

        -- Extraer y parsear bloque
        IF v_texto IS NOT NULL THEN
            SET v_bloque = REGEXP_SUBSTR(v_texto, '/\\*\\*Generic BEGIN\\*\\*/([\\s\\S]*?)/\\*\\*Generic END\\*\\*/');
            SET v_bloque = REPLACE(v_bloque, '/**Generic BEGIN**/', '');
            SET v_bloque = REPLACE(v_bloque, '/**Generic END**/', '');
            SET v_bloque = REGEXP_REPLACE(v_bloque, '[[:space:]]+', ' ');

            -- Campos extra√≠dos
            SET @Expediente = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&EXPEDIENTE:[^&\n]+'), '&EXPEDIENTE:', ''))),''),'SIN DATOS');
            SET @ext_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&EXT_CONTACTO:[^&\n]+'), '&EXT_CONTACTO:', ''))),''),'SIN DATOS');
            SET @cel_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CEL_CONTACTO:[^&\n]+'), '&CEL_CONTACTO:', ''))),''),'SIN DATOS');
            SET @nombre2_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&NOMBRE2_CONTACTO:[^&\n]+'), '&NOMBRE2_CONTACTO:', ''))),''),'SIN DATOS');
            SET @cel2_contacto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CEL2_CONTACTO:[^&\n]+'), '&CEL2_CONTACTO:', ''))),''),'SIN DATOS');
            SET @Correo = IFNULL(NULLIF(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CORREO:[^&\n]+'), '&CORREO:', '')),''),'SIN DATOS');
            SET @Puesto = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&PUESTO:[^&\n]+'), '&PUESTO:', ''))),''),'SIN DATOS');
            SET @CC = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CC:[^&\n]+'), '&CC:', ''))),''),'SIN DATOS');
            SET @Region = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&REGION:[^&\n]+'), '&REGION:', ''))),''),'SIN DATOS');
            SET @UPN = IFNULL(NULLIF(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&UPN:[^&\n]+'), '&UPN:', '')),''),'SIN DATOS');
            SET @usuario_N = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&USUARIO_N:[^&\n]+'), '&USUARIO_N:', ''))),''),'SIN DATOS');
            SET @IP = IFNULL(NULLIF(REPLACE(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&IP:[^&\n]+'), '&IP:', ''))),' ',''),''),'SIN DATOS');
            SET @Hostname = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&HOSTNAME:[^&\n]+'), '&HOSTNAME:', ''))),''),'SIN DATOS');
            SET @Tipo_usuario = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&TIPO_USUARIO:[^&\n]+'), '&TIPO_USUARIO:', ''))),''),'SIN DATOS');
            SET @Descripcion_incidente = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&DESCRIPCION_INCIDENTE:[^&\n]+'), '&DESCRIPCION_INCIDENTE:', ''))),''),'SIN DATOS');
            SET @Numero_afectados = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&NUMERO_AFECTADOS:[^&\n]+'), '&NUMERO_AFECTADOS:', ''))),''),'SIN DATOS');
            SET @Carrier = IFNULL(NULLIF(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&CARRIER:[^&\n]+'), '&CARRIER:', ''))),''),'SIN DATOS');
            SET @IP_Carrier = IFNULL(NULLIF(REPLACE(UPPER(TRIM(REGEXP_REPLACE(REGEXP_SUBSTR(v_bloque, '&IP DEL CARRIER:[^&\n]+'), '&IP DEL CARRIER:', ''))),' ',''),''),'SIN DATOS');

            -- Insertar parseado
            INSERT INTO tmp_tabla_plantillas
            VALUES (
                v_folio, v_incidencia_padre,
                @Expediente, v_abierto_por, v_nombreproyecto, @ext_contacto, @cel_contacto, @nombre2_contacto, @cel2_contacto,
                @Correo, @Puesto, @CC, @Region, @UPN, @usuario_N,
                @IP, @Hostname, @Tipo_usuario, @Descripcion_incidente, @Numero_afectados,
                @Carrier, @IP_Carrier, v_origen
            );
        END IF;
    END LOOP;

    CLOSE cur;

    /* ------------------------------------
       5) Resultado
       ------------------------------------ */
    SELECT * FROM tmp_tabla_plantillas;

proc_end:
END


